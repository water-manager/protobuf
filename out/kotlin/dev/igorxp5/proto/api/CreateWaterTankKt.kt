//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: api.proto

package dev.igorxp5.proto.api;

@kotlin.jvm.JvmSynthetic
public inline fun createWaterTank(block: dev.igorxp5.proto.api.CreateWaterTankKt.Dsl.() -> kotlin.Unit): dev.igorxp5.proto.api.CreateWaterTank =
  dev.igorxp5.proto.api.CreateWaterTankKt.Dsl._create(dev.igorxp5.proto.api.CreateWaterTank.newBuilder()).apply { block() }._build()
public object CreateWaterTankKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: dev.igorxp5.proto.api.CreateWaterTank.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: dev.igorxp5.proto.api.CreateWaterTank.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): dev.igorxp5.proto.api.CreateWaterTank = _builder.build()

    /**
     * <code>string name = 1;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>string name = 1;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }

    /**
     * <code>uint32 pressureSensorPin = 2;</code>
     */
    public var pressureSensorPin: kotlin.Int
      @JvmName("getPressureSensorPin")
      get() = _builder.getPressureSensorPin()
      @JvmName("setPressureSensorPin")
      set(value) {
        _builder.setPressureSensorPin(value)
      }
    /**
     * <code>uint32 pressureSensorPin = 2;</code>
     */
    public fun clearPressureSensorPin() {
      _builder.clearPressureSensorPin()
    }

    /**
     * <code>float volumeFactor = 3;</code>
     */
    public var volumeFactor: kotlin.Float
      @JvmName("getVolumeFactor")
      get() = _builder.getVolumeFactor()
      @JvmName("setVolumeFactor")
      set(value) {
        _builder.setVolumeFactor(value)
      }
    /**
     * <code>float volumeFactor = 3;</code>
     */
    public fun clearVolumeFactor() {
      _builder.clearVolumeFactor()
    }

    /**
     * <code>float pressureFactor = 4;</code>
     */
    public var pressureFactor: kotlin.Float
      @JvmName("getPressureFactor")
      get() = _builder.getPressureFactor()
      @JvmName("setPressureFactor")
      set(value) {
        _builder.setPressureFactor(value)
      }
    /**
     * <code>float pressureFactor = 4;</code>
     */
    public fun clearPressureFactor() {
      _builder.clearPressureFactor()
    }

    /**
     * <code>float minimumVolume = 5;</code>
     */
    public var minimumVolume: kotlin.Float
      @JvmName("getMinimumVolume")
      get() = _builder.getMinimumVolume()
      @JvmName("setMinimumVolume")
      set(value) {
        _builder.setMinimumVolume(value)
      }
    /**
     * <code>float minimumVolume = 5;</code>
     */
    public fun clearMinimumVolume() {
      _builder.clearMinimumVolume()
    }

    /**
     * <code>float maxVolume = 6;</code>
     */
    public var maxVolume: kotlin.Float
      @JvmName("getMaxVolume")
      get() = _builder.getMaxVolume()
      @JvmName("setMaxVolume")
      set(value) {
        _builder.setMaxVolume(value)
      }
    /**
     * <code>float maxVolume = 6;</code>
     */
    public fun clearMaxVolume() {
      _builder.clearMaxVolume()
    }

    /**
     * <code>float zeroVolumePressure = 7;</code>
     */
    public var zeroVolumePressure: kotlin.Float
      @JvmName("getZeroVolumePressure")
      get() = _builder.getZeroVolumePressure()
      @JvmName("setZeroVolumePressure")
      set(value) {
        _builder.setZeroVolumePressure(value)
      }
    /**
     * <code>float zeroVolumePressure = 7;</code>
     */
    public fun clearZeroVolumePressure() {
      _builder.clearZeroVolumePressure()
    }

    /**
     * <code>float pressureChangingValue = 8;</code>
     */
    public var pressureChangingValue: kotlin.Float
      @JvmName("getPressureChangingValue")
      get() = _builder.getPressureChangingValue()
      @JvmName("setPressureChangingValue")
      set(value) {
        _builder.setPressureChangingValue(value)
      }
    /**
     * <code>float pressureChangingValue = 8;</code>
     */
    public fun clearPressureChangingValue() {
      _builder.clearPressureChangingValue()
    }

    /**
     * <code>optional string waterSourceName = 9;</code>
     */
    public var waterSourceName: kotlin.String
      @JvmName("getWaterSourceName")
      get() = _builder.getWaterSourceName()
      @JvmName("setWaterSourceName")
      set(value) {
        _builder.setWaterSourceName(value)
      }
    /**
     * <code>optional string waterSourceName = 9;</code>
     */
    public fun clearWaterSourceName() {
      _builder.clearWaterSourceName()
    }
    /**
     * <code>optional string waterSourceName = 9;</code>
     * @return Whether the waterSourceName field is set.
     */
    public fun hasWaterSourceName(): kotlin.Boolean {
      return _builder.hasWaterSourceName()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun dev.igorxp5.proto.api.CreateWaterTank.copy(block: dev.igorxp5.proto.api.CreateWaterTankKt.Dsl.() -> kotlin.Unit): dev.igorxp5.proto.api.CreateWaterTank =
  dev.igorxp5.proto.api.CreateWaterTankKt.Dsl._create(this.toBuilder()).apply { block() }._build()
